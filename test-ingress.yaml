# kubectl --kubeconfig $(pwd)/kubeconfig apply -f test-ingress.yaml
---
apiVersion: v1
kind: Namespace
metadata:
  name: test-apps
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-world
  namespace: test-apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello-world
  template:
    metadata:
      labels:
        app: hello-world
    spec:
      containers:
      - name: hello-world
        image: gcr.io/google-samples/hello-app:1.0
        ports:
        - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: hello-world-service
  namespace: test-apps
spec:
  selector:
    app: hello-world
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo-server
  namespace: test-apps
spec:
  replicas: 1
  selector:
    matchLabels:
      app: echo-server
  template:
    metadata:
      labels:
        app: echo-server
    spec:
      containers:
      - name: echo-server
        image: ealen/echo-server:latest
        ports:
        - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: echo-server-service
  namespace: test-apps
spec:
  selector:
    app: echo-server
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-ingress
  namespace: test-apps
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /hello
        pathType: Prefix
        backend:
          service:
            name: hello-world-service
            port:
              number: 80
  - http:
      paths:
      - path: /echo
        pathType: Prefix
        backend:
          service:
            name: echo-server-service
            port:
              number: 80

#kubectl wait --for=condition=available --timeout=300s deployment/hello-world -n test-apps
#kubectl wait --for=condition=available --timeout=300s deployment/echo-server -n test-apps